#ifndef CASINO_HPP
#define CASINO_HPP

#include <vector>
#include <string>
#include <map>
#include "../include/Game.hpp"
#include "../include/Player.hpp"
#include "../include/BlackjackGame.hpp"
#include "../include/RouletteGame.hpp"
#include "../include/nlohmann/json.hpp"
#include <iostream>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <fstream>
#include "../include/Dealer.hpp"

class Casino {
private:
    std::vector<std::unique_ptr<Game>> games;         // Games available in the casino
    std::vector<std::unique_ptr<Player>> players;     // Players registered in the casino
    double houseBalance;                              // Casino's total balance
    Player* loggedInPlayer;                           // Player currently logged in

    // Load data from file
    void loadData();

    // Save data to file
    void saveData();

    // Login a player by their name
    void loginPlayer();

    // Menu interface for the player
    void playerMenu();
    void playGame(size_t choice);

protected:
    // Calculates revenue generated by the casino
    double calculateRevenue();

public:
    // Constructor
    Casino();

    void printPlayers();

    // Adds a new player to the casino
    void addPlayer(std::unique_ptr<Player> player);

    // Removes a player by their name from the casino
    void removePlayer(const std::string& playerName);

    // Returns a list of games in the casino
    std::vector<Game*> getGameList() const;

    // Getter for house balance
    double getHouseBalance() const;

    // Destructor
    ~Casino();
};;

#endif // CASINO_HPP
